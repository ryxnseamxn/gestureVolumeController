import math
import cv2 
import time
import numpy as np
import objc
import HandTrackingModule as htm
import osascript

cam_width, cam_height = 640,480
# magic numbers but osascript doesn't really offer a function that returns min and max volumes to my knowledge 
min_vol = 0
max_vol = 100
# more magic numbers but I'm not sure how to extract the average max data and average min data so I just guestimated 
hand_min = 10
hand_max = 235
volume = 0
volume_bar = 0
volume_percent = 0

cap = cv2.VideoCapture(0)
cap.set(3, cam_width)
cap.set(4, cam_height)
previous_time = 0
detector = htm.hand_detector()
while True:
    success, img = cap.read()
    img = detector.find_hands(img)
    lm_list = detector.find_position(img)
    if len(lm_list)!=0:
        x1, y1 = lm_list[4][1], lm_list[4][2]
        x2, y2 = lm_list[8][1], lm_list[8][2]
        cx, cy = (x1+x2)//2, (y1+y2)//2

        cv2.circle(img, (x1,y1), 15, (255,0,0), cv2.FILLED)
        cv2.circle(img, (x2,y2), 15, (255,0,0), cv2.FILLED)
        cv2.line(img, (x1,y1), (x2,y2), (255,0,0), 3)
        cv2.circle(img, (cx,cy), 8, (0,255,0), cv2.FILLED)

        length = math.hypot(x2-x1, y2-y1)
        #print(length)

        volume = np.interp(length, [hand_min,hand_max], [min_vol, max_vol])
        volume_bar = np.interp(length, [hand_min,hand_max], [400, 150])
        volume_percent = np.interp(length, [hand_min, hand_max], [0,100])
        target_volume = "set volume output volume " + str(volume)
        osascript.osascript(target_volume)
        print(volume)

        if length<50:
            cv2.circle(img, (cx,cy), 8, (0,0,255), cv2.FILLED)

    cv2.rectangle(img, (50,150), (85,400),(255,255,255),cv2.FILLED)
    cv2.rectangle(img, (50,150), (85,int(volume_bar)),(0,0,0),cv2.FILLED)
    cv2.putText(img, f"{int(volume_percent)}%", (40,450), cv2.FONT_HERSHEY_SIMPLEX, 1, (255,255,255), 3)

    current_time = time.time()
    fps = 1/(current_time-previous_time)
    previous_time = current_time

    cv2.putText(img, f'FPS: {int(fps)}', (40,50), cv2.FONT_HERSHEY_SIMPLEX, 1, (255,255,255), 2)

    cv2.imshow("Img", img)
    cv2.waitKey(1)